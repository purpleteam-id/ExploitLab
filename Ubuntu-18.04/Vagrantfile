# -*- mode: ruby -*-
# vi: set ft=ruby :

$install = <<EOF
PRE=$(date +%s)
MY_NAME=vagrant
MY_HOME=/home/${MY_NAME}
export DEBIAN_FRONTEND=noninteractive

# Install packages
sudo rm -rf /var/lib/apt/lists
sudo dpkg --add-architecture i386
sudo -E apt-get -y update
sudo -E apt-get -y upgrade
sudo -E apt-get -y install git python-pip python3-pip python-dev        \
    build-essential software-properties-common gdb gdb-multiarch curl   \
    vim exuberant-ctags pyflakes cmake tmux source-highlight            \
    libpq5 gcc-multilib libc6-i386 libc6-dev-i386 qemu-user-static      \
    libreadline-dev libssl-dev libpq-dev nmap libreadline5              \
    libsqlite3-dev libpcap-dev autoconf pgadmin3 zlib1g-dev libxml2-dev \
    libxslt1-dev screen ipython gdbserver binutils-{arm,mips}*          \
    binutils-multiarch libxml2-dev libxslt1-dev git libffi-dev          \
    libreadline-dev libtool debootstrap debian-archive-keyring          \
    libglib2.0-dev libpixman-1-dev libqt4-dev graphviz-dev              \
    nasm pandoc libtool-bin valgrind libfuzzer-7-dev zsh radare2
sudo -E pip install pip --upgrade

# Init .repositories
mkdir .repositories
function git_clone(){
    base=$(basename "${1}" | sed 's/\.git//g')
    if test -n "${3}"; then
        git clone -b "${3}" "${1}" ${MY_HOME}/.repositories/"${base}"
    else
        git clone "${1}" ${MY_HOME}/.repositories/"${base}"
    fi
    if test -n "${2}"; then
        ln -s ${MY_HOME}/.repositories/"${base}" "${2}"/"${base}"
    fi
}


# Install afl
sudo -E apt-get -y install afl afl-cov afl-clang

# Install pwntools
sudo -E pip install pwntools

# Enable core dumps
ulimit -c 100000
echo 'vagrant     soft      core      unlimited' | sudo tee /etc/security/limits.conf

# ptrace_scope = 0
sudo sed -i 's/kernel.yama.ptrace_scope = 1/kernel.yama.ptrace_scope = 0/' /etc/sysctl.d/10-ptrace.conf
sudo service procps restart

# Create .gdbinit
if [[ ! -f ${MY_HOME}/.gdbinit ]]
then
    echo 'set follow-fork-mode child'          >> ${MY_HOME}/.gdbinit
    echo 'set disassembly-flavor intel'        >> ${MY_HOME}/.gdbinit
    echo 'set auto-load safe-path /'           >> ${MY_HOME}/.gdbinit
    echo 'set disable-randomization off'       >> ${MY_HOME}/.gdbinit

    # Install gef
    git_clone https://github.com/hugsy/gef.git
    sed -i 's/127.0.1.1/127.0.0.1/g' ${MY_HOME}/.repositories/gef/gef.py
    echo '#source ~/.repositories/gef/gef.py' >> ${MY_HOME}/.gdbinit

    # Install peda
    git_clone https://github.com/longld/peda
    echo '#source ~/.repositories/peda/peda.py' >> ${MY_HOME}/.gdbinit

    # Install pwndbg
    git_clone https://github.com/pwndbg/pwndbg.git
    cd ${MY_HOME}/.repositories/pwndbg
    sudo ./setup.sh


    # Install ropper
    git_clone https://github.com/sashs/ropper.git
    cd ${MY_HOME}/.repositories/ropper
    git submodule init
    git submodule update
    sudo -E pip install filebytes==0.9.18
    sudo -E pip install keystone-engine
    sudo -E pip install . --upgrade                                                                                  >> ${MY_HOME}/.bashrc

fi

# Install zsh
wget --no-check-certificate https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh 
sudo chsh -s /bin/zsh vagrant
zsh

# Install asciinema
sudo pip3 install asciinema

# Update .screenrc
cat > ${MY_HOME}/.screenrc << SCREEN_END
startup_message off
vbell off
hardstatus alwayslastline
hardstatus string '%{= kG}[ %{G}%H %{g}][%= %{= kw}%?%-Lw%?%{r}(%{W}%n*%f%t%?(%u)%?%{r})%{w}%?%+Lw%?%? %= %{g}][%{B} %m/%d %{W}%c %{g}]'
defscrollback 50000
SCREEN_END

# Done
POST=$(date +%s)
echo "Installation took "$((POST-PRE))" seconds"
EOF

Vagrant.configure(2) do |config|
    config.vm.box = "ubuntu/bionic64"
    config.vm.box_check_update = false
    config.vm.network "private_network", ip: "192.168.33.10"
    config.vm.network "public_network"
    config.vm.provider "virtualbox" do |v|
        v.memory = 1024
        v.cpus = 1
    end
    config.vm.provision "shell", inline: $install, privileged: false
    config.vm.hostname = "purpleteamid"
    config.vm.synced_folder "./data", "/home/vagrant/data", disabled: false
    ENV['LC_ALL']="en_US.UTF-8"
end